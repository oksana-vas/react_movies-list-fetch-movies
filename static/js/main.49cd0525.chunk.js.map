{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","query","setQuery","isLoading","setIsLoading","hasError","setHasError","newMovie","setNewMovie","DEFAULT_IMG","useMemo","handleSearchButton","currentQuery","fetch","then","res","json","catch","Response","Error","getMovie","trim","response","Poster","Title","Plot","imdbID","finally","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","find","film","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49cd0525.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useMemo, useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n\n  const DEFAULT_IMG = useMemo(() => {\n    return 'https://via.placeholder.com/360x270.png?text=no%20preview';\n  }, []);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setHasError(false);\n  };\n\n  const handleSearchButton = (currentQuery: string) => {\n    setIsLoading(true);\n\n    getMovie(currentQuery.trim())\n      .then((response: MovieData | ResponseError) => {\n        if ('Title' in response) {\n          const {\n            Poster,\n            Title,\n            Plot,\n            imdbID,\n          } = response;\n\n          setNewMovie({\n            title: Title,\n            description: Plot,\n            imgUrl: Poster === 'N/A' ? DEFAULT_IMG : Poster,\n            imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n            imdbId: imdbID,\n          });\n        } else {\n          setHasError(true);\n        }\n      })\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleFormSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    handleSearchButton(query);\n  };\n\n  const handleAddMovie = () => {\n    if (newMovie) {\n      addMovie(newMovie);\n    }\n\n    setNewMovie(null);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': hasError,\n              })}\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {hasError && (\n            <p\n              data-cy=\"errorMessage\"\n              className=\"help is-danger\"\n            >\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!query}\n              onClick={() => handleSearchButton(query)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {newMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {newMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=a9d94a16';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleSetMovies = (movie: Movie) => {\n    const hasDuplicate = movies.find(film => film.imdbId === movie?.imdbId);\n\n    if (!hasDuplicate) {\n      setMovies(prevMovies => [...prevMovies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={handleSetMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}